= エンジニアのためのDNS（再）入門（中級者編）
#@# タイトル仮

== TEDみたいな前口上


== フルリゾルバーの仕事

 * クライアントの問い合わせについて、自分の持っている、またはキャッシュしている情報をもとに
   必要に応じて権威DNSサーバーに問い合わせを行って、応答する
#@# TTL触れる？
#@# ネガティブキャッシュ触れる？（完全一致、SOAに書いてあるnegative TTLが採用される、など）
 * ドメイン名空間の起点となる情報として、ルートゾーンの権威DNSサーバーに関する情報
   （ホスト名、IPアドレス: 総じてルートヒントと呼ぶ）を持っている
#@# プライミングは書かない


== 権威DNSサーバーの仕事

 * 自分の持つゾーンの問い合わせについて、他のサーバーの助けを借りることなく応答する
#@# 「自分の管理する」とは言わない; ゾーンマスターとの取り違えを防ぐ
 ** ローカルに持っているゾーンの内容に基づいて応答できる
 ** 問い合わせに関する処理の過程で、他のDNSサーバーに問い合わせを送る必要がない
 ** 本稿では触れないが、自分の持つ情報を更新する仕組みもある（ゾーン転送・notify・Dymanic Update）
 * 自分の持つゾーンについては応答のDNSメッセージでAA bit（auhtoritative bit）をonにする: 名前の由来


== ドメイン名

 * 例: @<tt>{www.example.com}
 * 「 @<tt>{.} 」で区切られたラベルで構成される
 * ラベルの切れ目で、他のサーバーに委任することができる
 ** 右に行くほど親側（委任する側）、左に行くほど子側（委任される側）
 ** 委任すると、そこから先は委任先で自由に管理できる


== リソースレコード

 * ドメイン名に結びつく情報の単位
 * {名前, クラス, タイプ, 内容}で構成される
 * クラスには @<tt>{IN} を使う（他にもある）
 * タイプにはIPv4アドレスを表す @<tt>{A} 、IPv6アドレスを表す @<tt>{AAAA} 、などがある
 * 以下、「レコード」と略す


== ゾーン

 * ドメイン名空間の一部
 ** サブツリーを構成するレコードのまとまり


== ルートって？

 * 空白のラベルを持つゾーン
 * 全てのFQDNは一番右側に空白のラベルを持っている
 * 全てのゾーンはルートの子孫になっている
 * ルートは1つ; これにより、DNSのドメイン名空間も1つ
#@# いわゆるalternate rootには触れない
#@# ついでに「jpのルート」って呼ばないでなどと言いたい


== @<kw>{Fully-Qualified Domain Name, FQDN} って？
#@# コラム行き or 削る

 * ルートまでの全てのラベルを省略せずに書いた名前
 * 末尾に「 @<tt>{.} 」を付けることでFQDNであると示す
 ** 不特定多数にドメイン名を伝えるときには（意識していないが）みんなFQDNで書いている
 ** FQDNであると明示する（ @<tt>{.} を付ける）のはゾーンファイルを書くときくらい


== 委任

 * あるドメイン名を他のゾーンに切り出す
 * 具体的には、委任する側にNSレコード（と、必要に応じてグルーレコード）を記載する
 ** 委任される側のゾーン頂点にも、同じ内容のNSレコード（と、頂点を示すSOAレコード）を記載する
 * 例:
 ** example.comゾーン（委任する側）
@<code>{sub.example.com.  IN  NS   ns1.sub.example.com.
sub.example.com.  IN  NS   ns2.example.net.}
 ** sub.example.comゾーン（委任される側）
@<code>{sub.example.com.      IN  SOA  ...
sub.example.com.      IN  NS   ns1.sub.example.com.
sub.example.com.      IN  NS   ns2.example.net.
ns1.sub.example.com.  IN  A    192.0.2.53
ns1.sub.example.com.  IN  AAAA 2001:db8:beef::1:53}


== グルーって？


== よくある誤解

=== 「 @<tt>{.} 」の切れ目が必ず委任を表してはいないことに注意
 * 例: @<tt>{www.state.ca.us}
 * @<tt>{ca.us} というゾーンは存在していない
 * @<tt>{us} というゾーンに、@<tt>{state.ca.us} のレコード（委任だけ）が書いてある

=== ある名前に結びつくリソースレコードが1つもないこともある
 * @<tt>{example.com} ゾーンの中で、
    @<tt>{www.sub.example.com} という名前を持つリソースレコードが存在しているが、
    @<tt>{sub.example.com} という名前を持つリソースレコードが存在していないケース
 * これが @<kw>{ENT, Empty Non-Terminal}


== 逆引き

 * @<tt>{A} レコードや @<tt>{AAAA} レコードとして登録されている情報を直接参照しているわけではない
 * IPアドレスをドメイン名にマップして、その名前の @<tt>{PTR} レコードを参照している
 ** 逆引きに関するDNSでの約束
 ** ドメイン名空間にあるドメイン名からレコードを検索するという操作は正引きと同じ
 * 仕組み上、 @<tt>{A} レコードや @<tt>{AAAA} レコードと対応付けられているわけではない
 ** 何でも書ける
 ** IPアドレス管理者の自己申告に近いが、でたらめなことを書いてもいいことがないので普通やらない
 * IPv4
 ** 1octetずつ逆にして10進数表記してラベル4個を構成し、最後に @<tt>{in-addr.arpa} を付ける
 ** 例:  @<tt>{203.0.113.4} → @<tt>{4.113.0.203.in-addr.arpa}
 ** @<b>{発展課題} prefixが/24より長いCIDRブロックの逆引き
 * IPv6
 ** 4bitずつ逆にして16進数表記してラベル32個を構成し、最後に @<tt>{ip6.arpa} を付ける
 ** 例:  @<tt>{2001:db8:beef:feed:0123:4567:89ab:cdef} → @<tt>{f.e.d.c.b.a.9.8.7.6.5.4.3.2.1.0.d.e.e.f.f.e.e.b.8.b.d.0.1.0.0.2.ip6.arpa}
 ** 昔は @<tt>{ip6.int} というゾーンも使われていたが廃止済; 本に書いてあったら投げ捨ててよい


== DNSのめんどくさいものたち

=== ワイルドカード

=== CNAME

=== DNAME

